[package]
name = "nrf-modem"
version = "0.7.3"
edition = "2021"
rust-version = "1.85"
license = "MIT OR Apache-2.0"
description = "Async modem api for the nRF91xx"
homepage = "https://github.com/diondokter/nrf-modem"
repository = "https://github.com/diondokter/nrf-modem"
readme = "README.md"
keywords = ["nRF91", "LTE", "GPS", "NB-IoT", "embedded"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
nrfxlib-sys = "=2.9.2"

futures = { version = "0.3.24", default-features = false, features = ["async-await"] }
num_enum = { version = "0.7.3", default-features = false }
defmt = { version = "1.0.1", optional = true }
cortex-m = "0.7.7"
linked_list_allocator = { version="0.10.5", default-features=false, features=["use_spin"] }
arrayvec = { version = "0.7.6", default-features = false }
nrf9160-pac = { version = "0.12.2", optional = true }
nrf9120-pac = { version = "0.12.2", optional = true }
at-commands = "0.5.5"
critical-section = "1.2.0"
embassy-sync = "0.6.2"
embassy-time = { version = "0.4.0", optional = true }
grounded = "0.2.0"
embedded-io-async = "0.6.1"

[build-dependencies]
cc = { version = "1.2.18", optional = true }

[features]
default = []
defmt = ["dep:defmt", "at-commands/defmt"]
dns-async = ["dep:embassy-time"]
modem-trace = []
modem-log = ["nrfxlib-sys/log", "dep:cc"]

nrf9160 = ["nrfxlib-sys/nrf9160", "dep:nrf9160-pac"]
nrf9151 = ["nrf9120"]
nrf9161 = ["nrf9120"]
nrf9120 = ["nrfxlib-sys/nrf9120", "dep:nrf9120-pac"]

# Enable this feature when you're using an interrupt executor. 
# You will need to give the interrupt number when initializing the modem so it can be ignored.
# The modem's IPC interrupt should be higher than the os irq. (IPC should pre-empt the executor)
#
# From then on, you should call the modem functions from the interrupt executor you've chosen.
# This is unless you're sure the underlying C code is threadsafe.
#
# Known threadsafe apis:
# - AT commands
os-irq = []

[package.metadata.docs.rs]
features = ["nrf9160"]
